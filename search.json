[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/Hello-World-Example/index.html",
    "href": "posts/Hello-World-Example/index.html",
    "title": "Creating a Hello World Post using a Jupyter Notebook",
    "section": "",
    "text": "print(\"Hello kashish\")\n\nHello kashish"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Computer-Vision-Concepts/index.html",
    "href": "posts/Computer-Vision-Concepts/index.html",
    "title": "Computer Vision - Concepts",
    "section": "",
    "text": "What are Pixels ?\nPixel is the smallest fragment of an image.\n\n\nWhat are Channel ?\n\n1 channel - shows black and white or greyscale images\nRed-Green-Blue channels - shows colored images\n\n\n\nWhat are Pixel Size ?\nEvery pixel can store 8 bits of memory, for e.g. So, the range of values it can store is 2^8=256, i.e., between 0 to 255. Where 255 represents white shade, and 0 represents black shade. Numbers between 0 & 255 are different shades of black and white “OR” grey\n\n\nWhat are filters ?\nFilters are a way to alter the original image. Filters are smaller matrix that are multiplied with larger matrix in a left to right fashion (like a torch), for e.g., to result in a different matrix. The resultant matrix will have different pixel values at certain places which will result in altering the source image. This can be inferred as a small convolution operation.\n\n\nStandard type of filters ?\n\nHigh-Pass filters: Used for sharpening the image.\nLow-Pass filters: Used for smoothening the image.\n\nThese filters can help in detecting edges or differentiate between brightness.\n\nExample functioning of Filters\n\nimport numpy as np\nfrom PIL import Image\nfrom scipy.ndimage import convolve\nfrom matplotlib.pyplot import imread\nimport matplotlib.pyplot as plt\n\n\npath = \"/Users/kashmkj/fastai_repo_22/kashish18.github.io/\"\n\nimage_profile = imread(path+\"/profile.jpg\")\n\nplt.imshow(image_profile)\nplt.show()\n\n\n\n\n\nEdge = np.array(\n    [[0,1,0],\n     [1,-8,1],\n     [0,1,0]], dtype=np.float64) # Filter Matrix\n\nImage_channel = []\n\n\n# We have 3 channels since it's a colored image, hence we loop over 3 times.\n# convolve(array_input, filter) will do the convolution operation, i.e., \n# multiply input image for each channel with the filter matrix\nfor channel in range(3):\n    res = convolve(image_profile[:,:,channel], Edge)\n    Image_channel.append(res)\n\nimg = np.dstack((Image_channel[0], Image_channel[1], Image_channel[2]))\nplt.imshow(img)\nplt.show()\n\n\n\n\n\nprint(\"Shape of output image = \" + str(img.shape))\n\nprint(\"Shape of input image = \" + str(image_profile.shape))\n    \nprint(\"Length of Image channel = \" + str(len(Image_channel)))\n\nprint(\"Shape of each Image Channel = \" + str(Image_channel[0].shape))\n\nShape of output image = (960, 640, 3)\nShape of input image = (960, 640, 3)\nLength of Image channel = 3\nShape of each Image Channel = (960, 640)\n\n\n\n\n\nWhich library can we use to get different type of filters ?\nThere are some in built filters present in PIL library :-\nfrom PIL import Image, ImageFilter\nfrom PIL.ImageFilter import (BLUR, CONTOUR, EDGE_ENHANCE...)\n\n\nWhy the concept of convolution ?\nThere are mainly two reasons why convolution is required instead of having just a simple feed forward NN: 1. Humongous number of input parameters (i.e, pixel size) 2. Exploit the spacial correlation across pixels resulting in reducing in number of operations for NN.\n\n\nWhat is a basic convolution ?\nA snapshot of input matrix (For E.g., 33) is convolved with a filter matrix (also 33), also called Weights. The actual input image can be of size say 1010. The filter matrix will swipe through the entire input matrix taking a snapshot of 33 (just like how a torch moves from left to right and top to bottom). The resultant matrix is a colnvoluted matrix. “Colvolved” involes summation of dot product of two matrices. Convolution helps extracting characteristics in an image. It also helps to reduce computation because at every convolution operation, we are reducing the dimension of the image which will be eventually given as input to the neural network classifier.\n\n\nWhat is a convolutional Neural netowork ?\nConvolution combined with a feed forward network is called CNN. We applied convolution to N*M matrix.\nThen we flatten the image to 1D( 1 * ( N * M ) ) and apply the normal feed forward neural network."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "kashish18.github.io",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 27, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nCreating a Hello World Post using a Jupyter Notebook\n\n\n\n\n\n\n\nblogging\n\n\nquarto\n\n\njupyter\n\n\n\n\n\n\n\n\n\n\n\nMay 27, 2023\n\n\nKashish Mukheja\n\n\n\n\n\n\n  \n\n\n\n\nComputer Vision - Concepts\n\n\n\n\n\n\n\nblogging\n\n\njupyter\n\n\nComputer Vision\n\n\n\n\n\n\n\n\n\n\n\nMay 27, 2023\n\n\nKashish Mukheja\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMay 24, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]